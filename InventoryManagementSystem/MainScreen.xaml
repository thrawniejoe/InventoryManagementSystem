<Window x:Class="InventoryManagementSystem.MainScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InventoryManagementSystem"
        mc:Ignorable="d"
        Title="MainScreen" Height="768" Width="1024" Loaded="Window_Loaded" MouseDown="Window_MouseDown">

    <Window.Resources>
        <local:InventoryDBDataSet x:Key="inventoryDBDataSet"/>
        <CollectionViewSource x:Key="vInventoryListViewSource" Source="{Binding vInventoryList, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="inventoryViewSource" Source="{Binding Inventory, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="usersViewSource" Source="{Binding Users, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="employeesViewSource" Source="{Binding Employees, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="officeListViewSource" Source="{Binding OfficeList, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="statusListViewSource" Source="{Binding StatusList, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="locationsViewSource" Source="{Binding Locations, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="categoriesViewSource" Source="{Binding Categories, Source={StaticResource inventoryDBDataSet}}"/>

        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="BorderBrush" Value="#FF373542"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#FF373542"/>
            <Setter Property="VerticalGridLinesBrush" Value="{x:Null}"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ColumnHeaderHeight" Value="25"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>

        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF40424E" Offset="0"/>
                        <GradientStop Color="#FF32353E" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="WhiteSmoke"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="BorderBrush" Value="#FF373542"/>
            <Setter Property="Background" Value="#FF272731" />
            <Setter Property="Foreground" Value="WhiteSmoke"/>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF23232B" Offset="1"/>
                                <GradientStop Color="#FF373740" Offset="0"/>
                                <GradientStop Color="#FF26262E" Offset="0.498"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FF00DDFD"/>
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF23232B" Offset="1"/>
                                <GradientStop Color="#FF373740" Offset="0"/>
                                <GradientStop Color="#FF26262E" Offset="0.498"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FF00DDFD"/>
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>
        </Style>



    </Window.Resources>
    <Grid>
        <TabControl x:Name="tcMainTabController" TabStripPlacement="Left" >
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{TemplateBinding Content}">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="270" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="3" />
                </Style>
            </TabControl.Resources>
            <TabItem Header="Home" Margin="0,36,0,-60">
                <Grid Background="#FFE5E5E5">
                    <Label Content="Welcome to the Inventory Management System" HorizontalAlignment="Left" Margin="270,79,0,0" VerticalAlignment="Top" FontSize="22" FontWeight="Bold"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory" Margin="0,60,0,-60">
                <TabControl Width="976" Margin="0,39,0,7">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="0" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="3" />
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="Inventory List">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource vInventoryListViewSource}">
                            <WrapPanel HorizontalAlignment="Left" Height="35" Margin="10,10,0,0" VerticalAlignment="Top" Width="950">
                                <Button x:Name="btnAddItem" Content="Add Item" Width="75" Click="BtnAddItem_Click"/>
                                <Button x:Name="btnClearFilter" Content="Clear Filter" Width="75" Click="BtnClearFilter_Click"/>
                                <ComboBox x:Name="cboFilterList" Width="120" SelectionChanged="CboFilterList_SelectionChanged"/>
                            </WrapPanel>
                            <DataGrid x:Name="vInventoryListDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryViewSource}}" Margin="10,50,10,251" RowDetailsVisibilityMode="VisibleWhenSelected" GridLinesVisibility="None" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserDeleteRows="False" SelectionMode="Single">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="btnModifyRecord" Header="" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnModifyRecord" Content="Moditfy" Tag="{Binding itemID, Mode=OneWay}" Click="BtnModitfyItem_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="itemNameColumn" Binding="{Binding itemName}" Header="item Name" Width="120"/>
                                    <DataGridTextColumn x:Name="tagColumn" Binding="{Binding tag}" Header="tag" Width="90"/>
                                    <DataGridTextColumn x:Name="categoryNameColumn" Binding="{Binding CategoryName}" Header="Category Name" Width="100"/>
                                    <DataGridTextColumn x:Name="locationColumn" Binding="{Binding Location}" Header="Location" Width="100"/>
                                    <DataGridTextColumn x:Name="statusColumn" Binding="{Binding Status}" Header="Status" Width="60"/>
                                    <DataGridTextColumn x:Name="nameColumn1" Binding="{Binding Name}" Header="Name" Width="120"/>
                                    <DataGridTemplateColumn x:Name="dateAssignedColumn" Header="date Assigned" Width="120">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding dateAssigned, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="dateRecordModifiedColumn" Header="date Record Modified" Width="120">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding dateRecordModified, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="btnLookUpItem" Content="Look Up Item" HorizontalAlignment="Left" Margin="329,11,0,0" VerticalAlignment="Top" Width="75" Click="BtnLookUpItem_Click"/>
                            <Button Content="Button" HorizontalAlignment="Left" Margin="440,11,0,0" VerticalAlignment="Top" Width="75" Click="Button_Click"/>
                            <DataGrid x:Name="inventoryDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryViewSource}}" Margin="152,446,66,9" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTextColumn x:Name="itemIDColumn" Binding="{Binding itemID}" Header="item ID" IsReadOnly="True" Width="SizeToHeader"/>
                                    <DataGridTextColumn x:Name="itemNameColumn1" Binding="{Binding itemName}" Header="item Name" Width="SizeToHeader"/>
                                    <DataGridTextColumn x:Name="tagColumn1" Binding="{Binding tag}" Header="tag" Width="SizeToHeader"/>
                                    <DataGridTextColumn x:Name="serialNumberColumn" Binding="{Binding serialNumber}" Header="serial Number" Width="SizeToHeader"/>
                                    <DataGridTextColumn x:Name="manufacturerColumn" Binding="{Binding manufacturer}" Header="manufacturer" Width="SizeToHeader"/>
                                    <DataGridTemplateColumn x:Name="modelIDColumn" Header="model ID" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox>
                                                    <ComboBoxItem Content="{Binding modelID}"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="modelNumberColumn" Binding="{Binding modelNumber}" Header="model Number" Width="SizeToHeader"/>
                                    <DataGridTemplateColumn x:Name="categoryIDColumn" Header="Category ID" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox>
                                                    <ComboBoxItem Content="{Binding CategoryID}"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="locationIDColumn" Header="Location ID" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox>
                                                    <ComboBoxItem Content="{Binding LocationID}"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="statusIDColumn" Header="Status ID" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox>
                                                    <ComboBoxItem Content="{Binding StatusID}"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="assignedToColumn" Header="assigned To" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox>
                                                    <ComboBoxItem Content="{Binding assignedTo}"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="dateAssignedColumn1" Header="date Assigned" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding dateAssigned, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="dateRecordModifiedColumn1" Header="date Record Modified" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding dateRecordModified, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="recordModifiedBy_userIDColumn" Binding="{Binding recordModifiedBy_userID}" Header="record Modified By user ID" Width="SizeToHeader"/>
                                    <DataGridTemplateColumn x:Name="datePurchasedColumn" Header="date Purchased" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding datePurchased, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="officeIDColumn" Header="office ID" Width="SizeToHeader">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <ComboBox>
                                                    <ComboBoxItem Content="{Binding officeID}"/>
                                                </ComboBox>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Item Details">
                        <Grid Background="#FFE5E5E5"/>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Personnel" Margin="0,60,0,-60" >
                <Grid DataContext="{StaticResource employeesViewSource}">
                    <DataGrid x:Name="employeesDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="96,80,10,10" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="RemoveEmployee" Header="" Width="100">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="btnRemoveEmployee" Content="Delete" Tag="{Binding EmployeeID, Mode=OneWay}" Click="BtnRemoveEmployee_Click"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="employeeIDColumn" Binding="{Binding EmployeeID}" Header="Employee ID" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="nameColumn" Binding="{Binding Name}" Header="Name" Width="120"/>
                            <DataGridTextColumn x:Name="titleColumn1" Binding="{Binding Title}" Header="Title" Width="120"/>
                            <DataGridTextColumn x:Name="emailAddressColumn" Binding="{Binding EmailAddress}" Header="Email Address" Width="120"/>
                            <DataGridTextColumn x:Name="managerColumn" Binding="{Binding Manager}" Header="Manager" Width="90"/>
                            <DataGridTextColumn x:Name="divisionColumn" Binding="{Binding Division}" Header="Division" Width="90"/>
                            <DataGridTextColumn x:Name="locationColumn1" Binding="{Binding Location}" Header="Location" Width="90"/>
                            <DataGridTextColumn x:Name="statusColumn1" Binding="{Binding Status}" Header="Status" Width="60"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="BtnAddEmployee" Content="Add Employee" HorizontalAlignment="Left" Margin="83,49,0,0" VerticalAlignment="Top" Width="88" Click="BtnAddEmployee_Click"/>
                    <Button Content="Button" HorizontalAlignment="Left" Margin="176,49,0,0" VerticalAlignment="Top" Width="75"/>
                </Grid>
            </TabItem>
            <TabItem Header="Building Map" Margin="0,60,0,-60" />
            <TabItem Header="Reports" Margin="0,60,0,-60" />
            <TabItem Header="Settings" Margin="-2,60,0,-60">
                <Grid Margin="0,0,0,0">
                    <Button x:Name="BtnImportInventory" Content="Import" HorizontalAlignment="Left" Margin="102,100,0,0" VerticalAlignment="Top" Width="75" Click="BtnImportInventory_Click"/>
                    <TextBox x:Name="TxtFileLink" HorizontalAlignment="Left" Height="23" Margin="208,97,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="317"/>
                    <ProgressBar x:Name="PbImportProgressBar" HorizontalAlignment="Left" Height="23" Margin="208,138,0,0" VerticalAlignment="Top" Width="317"/>
                    <Label Content="Import Inventory CSV" HorizontalAlignment="Left" Margin="102,46,0,0" VerticalAlignment="Top"/>
                    <Label Content="Document Location" HorizontalAlignment="Left" Margin="111,207,0,0" VerticalAlignment="Top"/>
                    <Button Content="Open Directory" HorizontalAlignment="Left" Margin="150,238,0,0" VerticalAlignment="Top" Width="107"/>
                    <Button Content="Change Directory" HorizontalAlignment="Left" Margin="150,263,0,0" VerticalAlignment="Top" Width="107"/>
                    <TextBox HorizontalAlignment="Left" Height="23" Margin="285,260,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="355"/>
                    <Label x:Name="lblImportStatus" Content="Label" HorizontalAlignment="Left" Margin="208,166,0,0" VerticalAlignment="Top"/>
                    <Button x:Name="BtnPickFileImport" Content="Button" HorizontalAlignment="Left" Margin="530,100,0,0" VerticalAlignment="Top" Width="75" Click="BtnPickFileImport_Click"/>

                </Grid>

            </TabItem>
            <TabItem Header="Administration" Margin="-2,59.667,0,-59.667" Name="tabAdmin" Background="Red" Height="84" VerticalAlignment="Top" ContextMenuOpening="tabAdmin_ContextMenuOpening">
                <TabControl Width="976" Margin="0,39,0,7">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="0" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="3" />
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="User Management">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource usersViewSource}">
                            <WrapPanel HorizontalAlignment="Left" Height="35" Margin="10,10,0,0" VerticalAlignment="Top" Width="950">
                                <Button x:Name="btnAdd" Content="Add" Width="75" Click="BtnAdd_Click"/>
                                <Button x:Name="btnRemove" Content="Remove" Width="75"/>
                                <Button x:Name="btnClear" Content="Clear Filter" Width="75"/>
                                <ComboBox Width="120"/>
                            </WrapPanel>
                            <DataGrid x:Name="usersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="109,50,352,214" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding firstName}" Header="first Name" Width="120"/>
                                    <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding lastName}" Header="last Name" Width="120"/>
                                    <DataGridTextColumn x:Name="titleColumn" Binding="{Binding title}" Header="title" Width="120"/>
                                    <DataGridTemplateColumn x:Name="modifyUserColumn" Header="" Width="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnModifyUser" Content="Modify" Tag="{Binding userID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnModifyUser_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="deleteUserColumn" Header="" Width="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteUser" Content="Delete" Tag="{Binding userID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteUser_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="User Roles">
                        <Grid Background="#FFE5E5E5"/>
                    </TabItem>
                    <TabItem Header="Offices" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="48" Margin="-1.667,0,0,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource officeListViewSource}">
                            <Grid x:Name="grid1" DataContext="{StaticResource officeListViewSource}" HorizontalAlignment="Left" Margin="48,67,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="office Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="officeNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding officeName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Grid x:Name="grid2" DataContext="{StaticResource officeListViewSource}" HorizontalAlignment="Left" Margin="52,104,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="office Floor:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="officeFloorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding officeFloor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddOffice" Content="Add Office" HorizontalAlignment="Left" Margin="113,150,0,0" VerticalAlignment="Top" Width="75" Click="BtnAddOffice_Click"/>
                            <DataGrid x:Name="officeListDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="341,49,405,206.667" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteOfficeColumn" Header="" Width="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteOffice" Content="Delete" Tag="{Binding officeID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteOffice_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="officeNameColumn" Binding="{Binding officeName}" Header="office Name" Width="SizeToHeader"/>
                                    <DataGridTextColumn x:Name="officeFloorColumn" Binding="{Binding officeFloor}" Header="office Floor" Width="SizeToHeader"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Statuses" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="55" Margin="-1.667,0,-5.333,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource statusListViewSource}">
                            <DataGrid x:Name="statusListDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="279,61,514,179" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteStatusColumn" Header="" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteStatus" Content="Delete" Tag="{Binding StatusID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteStatus_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="statusColumn2" Binding="{Binding Status}" Header="Status" Width="80"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Grid x:Name="grid3" HorizontalAlignment="Left" Margin="58,109,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Status:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="statusTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Status, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddStatus" Content="Add Status" HorizontalAlignment="Left" Margin="115,158,0,0" VerticalAlignment="Top" Width="75" Click="BtnAddStatus_Click"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Locations" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="66" Margin="-2,0,0,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource locationsViewSource}">
                            <DataGrid x:Name="locationsDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="257,45,313,410" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteLocationColumn" Header="" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteLocation" Content="Delete" Tag="{Binding LocationID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteLocation_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="locationColumn2" Binding="{Binding Location}" Header="Location" Width="SizeToHeader"/>
                                    <DataGridTextColumn x:Name="stateColumn" Binding="{Binding State}" Header="State" Width="SizeToHeader"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Grid x:Name="grid4" HorizontalAlignment="Left" Margin="62,100,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Location:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="locationTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Location, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Grid x:Name="grid5" HorizontalAlignment="Left" Margin="81,137,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="State:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="stateTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding State, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddLocation" Content="Add Location" HorizontalAlignment="Left" Margin="113,190,0,0" VerticalAlignment="Top" Width="75" Click="BtnAddLocation_Click"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Categories" HorizontalAlignment="Left" Height="22" VerticalAlignment="Top" Width="65" Margin="-2,0,-15,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource categoriesViewSource}">
                            <DataGrid x:Name="categoriesDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="350,32,423,423" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteCategoryColumn" Header="" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteCategory" Content="Delete" Tag="{Binding CategoryID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteCategory_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="categoryNameColumn1" Binding="{Binding CategoryName}" Header="Category Name" Width="SizeToHeader"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Grid x:Name="grid6" HorizontalAlignment="Left" Margin="64,94,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Category Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="categoryNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CategoryName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddCategory" Content="Add Category" HorizontalAlignment="Left" Margin="147,131,0,0" VerticalAlignment="Top" Width="83" Click="BtnAddCategory_Click"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
