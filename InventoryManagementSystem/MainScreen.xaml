<Window x:Class="InventoryManagementSystem.MainScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InventoryManagementSystem"
        mc:Ignorable="d"
        Title="Inventory Management System" Height="768" Width="1024" Loaded="Window_Loaded" MouseDown="Window_MouseDown">

    <Window.Resources>

        <Storyboard x:Key="sbHideAnimation" >
            <DoubleAnimation Storyboard.TargetProperty="Opacity"  From="1" To="1" Duration="0:0:3" />
            <!--label shows for 3 sec-->
            <DoubleAnimation Storyboard.TargetProperty="Opacity" BeginTime="0:0:3" From="1" To="0" DecelerationRatio=".5" Duration="0:0:2" />
            <!--Fade out the label after 3 sec-->
        </Storyboard>
        <local:InventoryDBDataSet x:Key="inventoryDBDataSet"/>
        <CollectionViewSource x:Key="vInventoryListViewSource" Source="{Binding vInventoryListing, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="inventoryViewSource" Source="{Binding Inventory, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="usersViewSource" Source="{Binding Users, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="employeesViewSource" Source="{Binding Employees, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="officeListViewSource" Source="{Binding OfficeList, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="statusListViewSource" Source="{Binding StatusList, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="locationsViewSource" Source="{Binding Locations, Source={StaticResource inventoryDBDataSet}}"/>
        <CollectionViewSource x:Key="categoriesViewSource" Source="{Binding Categories, Source={StaticResource inventoryDBDataSet}}"/>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFC8C8C8" Offset="0"/>
                        <GradientStop Color="#FFB0B0B0" Offset="0.983"/>
                        <GradientStop Color="#FFF2F2F2" Offset="0.527"/>
                        <GradientStop Color="White" Offset="0.021"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Setter Property="BorderBrush" Value="#FFBBBBBB"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                            BorderThickness="1"
                            Padding="4,2" 
                            CornerRadius="1" 
                            BorderBrush="#FF898989"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF858585" Offset="0"/>
                                            <GradientStop Color="White" Offset="1"/>
                                            <GradientStop Color="#FFD9D9D9" Offset="0.799"/>
                                            <GradientStop Color="#FFF6F6F6" Offset="0.321"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type DataGrid}">
            <Setter Property="BorderBrush" Value="#FFC9C9C9"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#FFE0E0E0"/>
            <Setter Property="VerticalGridLinesBrush" Value="{x:Null}"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF999999" Offset="1"/>
                        <GradientStop Color="#FFE4E4E4" Offset="0"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="ColumnHeaderHeight" Value="25"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>

        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="White" Offset="0"/>
                        <GradientStop Color="LightGray" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="BorderBrush" Value="#FFF1F1F1"/>
            <Setter Property="Background" Value="White" />
            <Setter Property="Foreground" Value="#FF494949"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFCDCDCD" Offset="1"/>
                                <GradientStop Color="LightGray" Offset="0"/>
                                <GradientStop Color="White" Offset="0.894"/>
                                <GradientStop Color="#FFF4F4F4" Offset="0.084"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FF4B4B4B"/>
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFCFCFCF" Offset="1"/>
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Color="White" Offset="0.498"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="#FF2E2E2E"/>
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0"
                        Padding="5,5,5,5" Margin="0,0,0,0" BorderBrush="#00E0E0E0">
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#00DCDCDC"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF62FF46" Offset="0.13"/>
                                            <GradientStop Color="#FF207C70" Offset="1"/>
                                            <GradientStop Color="#FF217414" Offset="0.937"/>
                                            <GradientStop Color="#FE1DD328" Offset="0.69"/>
                                            <GradientStop Color="#FE2DDD2F" Offset="0.377"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CornerRadius" TargetName="Border" Value="0"/>

                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF7DCAFF" Offset="0"/>
                                            <GradientStop Color="#FF159BCD" Offset="0.418"/>
                                            <GradientStop Color="#FF909090" Offset="1"/>
                                            <GradientStop Color="#FF0C3376" Offset="0.971"/>
                                            <GradientStop Color="#FF94CBE2" Offset="0.113"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CornerRadius" TargetName="Border" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="TabItemStyleSideBar" TargetType="{x:Type TabItem}" >
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0"
                        Padding="5,5,5,5" BorderBrush="#00E0E0E0" Margin="0,-1,0,1">
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="Black"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF25E618" Offset="0"/>
                                            <GradientStop Color="#FF155B2B" Offset="1"/>
                                            <GradientStop Color="#FF14B71C" Offset="0.762"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CornerRadius" TargetName="Border" Value="2"/>

                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="Black"/>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDBDBDB" Offset="0"/>
                                            <GradientStop Color="#FFFBFCFF" Offset="0.472"/>
                                            <GradientStop Color="#FF909090" Offset="1"/>
                                            <GradientStop Color="White" Offset="0.944"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="CornerRadius" TargetName="Border" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabItemStyleSideBarAdmin" TargetType="{x:Type TabItem}" >
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" BorderThickness="0,0,0,0" CornerRadius="0,0,0,0"
                        Padding="5,5,5,5" Margin="0,0,0,0" BorderBrush="#00E0E0E0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE33030" Offset="0"/>
                                    <GradientStop Color="#FF590000" Offset="1"/>
                                    <GradientStop Color="#FFB71414" Offset="0.768"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" />

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsSelected" Value="True">

                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#00DCDCDC"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="BorderThickness" TargetName="Border" Value="0"/>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                                            <GradientStop Color="#FF25E618" Offset="0"/>
                                            <GradientStop Color="#FF155B2B" Offset="1"/>
                                            <GradientStop Color="#FF14B71C" Offset="0.762"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="CornerRadius" TargetName="Border" Value="2"/>

                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White"/>
                                <Setter Property="FontWeight" Value="SemiBold"/>
                                <Setter Property="HeaderTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <ContentPresenter Content="{TemplateBinding Content}">
                                                <ContentPresenter.LayoutTransform>
                                                    <RotateTransform Angle="-90" />
                                                </ContentPresenter.LayoutTransform>
                                            </ContentPresenter>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background" TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCF0000" Offset="0"/>
                                            <GradientStop Color="Red" Offset="0.472"/>
                                            <GradientStop Color="#FF8D0000" Offset="1"/>
                                            <GradientStop Color="#FFF90000" Offset="0.944"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>

                                <Setter Property="CornerRadius" TargetName="Border" Value="0"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="BorderBrush" Value="Black"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <TabControl x:Name="tcMainTabController" TabStripPlacement="Left"  >
            <TabControl.Resources>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{TemplateBinding Content}">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="270" />
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding" Value="3" />
                </Style>
            </TabControl.Resources>
            <TabControl.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFD1D2D3"/>
                    <GradientStop Color="#FF495366" Offset="1"/>
                    <GradientStop Color="White" Offset="0.991"/>
                </LinearGradientBrush>
            </TabControl.Background>
            <TabItem Header="Home" Margin="0,50,0,-50" Style="{DynamicResource TabItemStyleSideBar}" Height="100">
                <Grid Margin="0,0,0,-0.333" Width="974">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFC1C1C1" Offset="1"/>
                            <GradientStop Color="#FFF0F0F0"/>
                            <GradientStop Color="#FFEEEEEE" Offset="0.957"/>
                            <GradientStop Color="White" Offset="0.457"/>
                            <GradientStop Color="#FFFBFBFB" Offset="0.161"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Label Content="Welcome to the Inventory Management System" HorizontalAlignment="Left" Margin="270,79,0,0" VerticalAlignment="Top" FontSize="22" FontWeight="Bold"/>
                    <Label Content="Total Items in the Inventory" HorizontalAlignment="Left" Margin="270,226,0,0" VerticalAlignment="Top"/>
                    <Label Content="Total Active Items in the Inventory" HorizontalAlignment="Left" Margin="270,257,0,0" VerticalAlignment="Top"/>
                    <Label Content="Total Employees" HorizontalAlignment="Left" Margin="547,226,0,0" VerticalAlignment="Top"/>
                    <Label Content="Total Active Employees" HorizontalAlignment="Left" Margin="547,252,0,0" VerticalAlignment="Top"/>
                    <Label Content="Total Active Desktop Computers" HorizontalAlignment="Left" Margin="270,319,0,0" VerticalAlignment="Top"/>
                    <Label Content="Total Active Laptops" HorizontalAlignment="Left" Margin="270,350,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblTotalLaptops" Content="Label" HorizontalAlignment="Left" Margin="477,350,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblDesktopTotal" Content="Label" HorizontalAlignment="Left" Margin="477,319,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblTotalActiveItems" Content="Label" HorizontalAlignment="Left" Margin="477,257,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblTotalItems" Content="Label" HorizontalAlignment="Left" Margin="477,226,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblTotalEmployees" Content="Label" HorizontalAlignment="Left" Margin="727,226,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblEmployeesActiveTotal" Content="Label" HorizontalAlignment="Left" Margin="727,252,0,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
            <TabItem Header="Inventory" Margin="0,50,0,-50" Style="{DynamicResource TabItemStyleSideBar}" Height="100">
                <TabControl Width="976" Margin="0,39,0,7">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="0" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="3" />
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="Inventory List" Margin="-2,-2,-73,0">
                        <Grid DataContext="{StaticResource vInventoryListViewSource}">
                            <Grid.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="#FFC3C3C3" Offset="1"/>
                                </LinearGradientBrush>
                            </Grid.Background>
                            <WrapPanel HorizontalAlignment="Left" Height="35" Margin="10,10,0,0" VerticalAlignment="Top" Width="950" RenderTransformOrigin="0,0">
                                <Button x:Name="btnAddItem" Content="Add Item" Width="120" Click="BtnAddItem_Click" Height="30"/>
                                <Label Content="Filter List:" Width="62" HorizontalAlignment="Right"/>
                                <ComboBox x:Name="cboFilterList" Width="120" SelectionChanged="CboFilterList_SelectionChanged"/>
                                <Button x:Name="btnClearFilter"  Content="Clear Filter" Width="120" Click="BtnClearFilter_Click" Height="30"/>
                            </WrapPanel>
                            <DataGrid x:Name="vInventoryListDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource inventoryViewSource}}" Margin="10,50,10,10" RowDetailsVisibilityMode="VisibleWhenSelected" GridLinesVisibility="None" CanUserResizeColumns="False" SelectionMode="Single" CanUserAddRows="True" CanUserDeleteRows="False" CanUserResizeRows="False">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="btnModifyRecord" Header="" Width="100">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnModifyRecord" Content="Moditfy" Tag="{Binding itemID, Mode=OneWay}" Click="BtnModitfyItem_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="itemNameColumn" Binding="{Binding itemName}" Header="Item Name" Width="120"/>
                                    <DataGridTextColumn x:Name="tagColumn" Binding="{Binding tag}" Header="Tag" Width="90"/>
                                    <DataGridTextColumn x:Name="categoryNameColumn" Binding="{Binding CategoryName}" Header="Category Name" Width="100"/>
                                    <DataGridTextColumn x:Name="locationColumn" Binding="{Binding Location}" Header="Location" Width="100"/>
                                    <DataGridTextColumn x:Name="statusColumn" Binding="{Binding Status}" Header="Status" Width="60"/>
                                    <DataGridTextColumn x:Name="nameColumn1" Binding="{Binding Name}" Header="Name" Width="120"/>
                                    <DataGridTemplateColumn x:Name="dateAssignedColumn" Header="Date Assigned" Width="120">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding dateAssigned, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="dateRecordModifiedColumn" Header="Date Record Modified" Width="120">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <DatePicker SelectedDate="{Binding dateRecordModified, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="btnLookUpItem" Content="Look Up Item" HorizontalAlignment="Left" Margin="509,10,0,0" VerticalAlignment="Top" Width="120" Click="BtnLookUpItem_Click" Height="30"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
            <TabItem Header="Personnel" Margin="0,49,0,-49" Style="{DynamicResource TabItemStyleSideBar}" Height="100">
                <Grid DataContext="{StaticResource employeesViewSource}">
                    <DataGrid x:Name="employeesDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="10,80,10.333,9.667" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn x:Name="ModifyEmployee" Header="" Width="100">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="btnModifyEmployee" Content="Modify" Tag="{Binding EmployeeID, Mode=OneWay}" Click="BtnModifyEmployee_Click"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn x:Name="RemoveEmployee" Header="" Width="100">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="btnRemoveEmployee" Content="Delete" Tag="{Binding EmployeeID, Mode=OneWay}" Click="BtnRemoveEmployee_Click"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn x:Name="nameColumn" Binding="{Binding Name}" Header="Name" Width="120"/>
                            <DataGridTextColumn x:Name="titleColumn1" Binding="{Binding Title}" Header="Title" Width="120"/>
                            <DataGridTextColumn x:Name="emailAddressColumn" Binding="{Binding EmailAddress}" Header="Email Address" Width="120"/>
                            <DataGridTextColumn x:Name="managerColumn" Binding="{Binding Manager}" Header="Manager" Width="90"/>
                            <DataGridTextColumn x:Name="divisionColumn" Binding="{Binding Division}" Header="Division" Width="90"/>
                            <DataGridTextColumn x:Name="locationColumn1" Binding="{Binding Location}" Header="Location" Width="90"/>
                            <DataGridTextColumn x:Name="statusColumn1" Binding="{Binding Status}" Header="Status" Width="60"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="BtnAddEmployee" Content="Add Employee" HorizontalAlignment="Left" Margin="10,29,0,0" VerticalAlignment="Top" Width="120" Click="BtnAddEmployee_Click" Height="30"/>
                </Grid>
            </TabItem>
            <TabItem Header="Building Map" Margin="0,48,0,-48" Style="{DynamicResource TabItemStyleSideBar}" Height="100">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource usersViewSource}" Margin="0,0,0,16">
                    <WrapPanel HorizontalAlignment="Left" Height="35" Margin="10,10,0,0" VerticalAlignment="Top" Width="950"/>
                    <Button x:Name="BtnOpenMap" Content="Button" HorizontalAlignment="Left" Margin="129,70,0,0" VerticalAlignment="Top" Width="75" Click="BtnOpenMap_Click"/>
                </Grid>
            </TabItem>

            <TabItem Header="Settings" Margin="-2,47,0,-47" Style="{DynamicResource TabItemStyleSideBar}" Height="100">

                <Grid Margin="0,0,0,0" Width="1487">
                    <Button x:Name="BtnImportInventory" Content="Import" HorizontalAlignment="Left" Margin="102,97,0,0" VerticalAlignment="Top" Width="101" Click="BtnImportInventory_Click"/>
                    <TextBox x:Name="TxtFileLink" HorizontalAlignment="Left" Height="23" Margin="208,97,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="317"/>
                    <ProgressBar x:Name="PbImportProgressBar" HorizontalAlignment="Left" Height="23" Margin="208,138,0,0" VerticalAlignment="Top" Width="317"/>
                    <Label Content="Import Inventory CSV" HorizontalAlignment="Left" Margin="102,66,0,0" VerticalAlignment="Top"/>
                    <Label Content="Document Location" HorizontalAlignment="Left" Margin="102,207,0,0" VerticalAlignment="Top"/>
                    <Button x:Name="BtnOpenDocDir" Content="Open Directory" HorizontalAlignment="Left" Margin="102,238,0,0" VerticalAlignment="Top" Width="107"/>
                    <Button x:Name="BtnChangeDocDir" Content="Change Directory" HorizontalAlignment="Left" Margin="102,263,0,0" VerticalAlignment="Top" Width="107" Click="BtnChangeDocDir_Click"/>
                    <TextBox x:Name="txtDocDir" HorizontalAlignment="Left" Height="23" Margin="214,262,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="378"/>
                    <Label x:Name="lblImportStatus" Content="Label" HorizontalAlignment="Left" Margin="208,166,0,0" VerticalAlignment="Top"/>
                    <Button x:Name="BtnPickFileImport" Content="Button" HorizontalAlignment="Left" Margin="530,97,0,0" VerticalAlignment="Top" Width="75" Click="BtnPickFileImport_Click"/>
                    <Button x:Name="BtnUpdateCompName" Content="Submit" HorizontalAlignment="Left" Margin="245,404,0,0" VerticalAlignment="Top" Width="101" Click="BtnUpdateCompName_Click"/>
                    <TextBox x:Name="txtCompanyName" HorizontalAlignment="Left" Height="23" Margin="245,376,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="329"/>
                    <Label Content="Company Name" HorizontalAlignment="Left" Margin="245,350,0,0" VerticalAlignment="Top"/>
                    <Label x:Name="lblCNUpdateMsg" Content="" HorizontalContentAlignment="Center" HorizontalAlignment="Left" Margin="245,431,0,0" VerticalAlignment="Top" Width="329" Foreground="#FF00B819">
 
                    </Label>

                </Grid>

            </TabItem>
            <TabItem Header="Administration"  Style="{DynamicResource TabItemStyleSideBarAdmin}" Margin="-2,46,0,-46" Name="tabAdmin" Background="Red" Height="102" VerticalAlignment="Top" ContextMenuOpening="tabAdmin_ContextMenuOpening" Foreground="Black">
                <TabControl Width="976" Margin="0,39,0,7">
                    <TabControl.Resources>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <ContentPresenter Content="{TemplateBinding Content}">
                                            <ContentPresenter.LayoutTransform>
                                                <RotateTransform Angle="0" />
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="3" />
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="User Management" Style="{DynamicResource TabItemStyle1}" HorizontalAlignment="Left" Width="123" Margin="0,0,-13,0" Height="40">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource usersViewSource}">
                            <WrapPanel HorizontalAlignment="Left" Height="35" Margin="80,10,0,0" VerticalAlignment="Top" Width="880">
                                <Button x:Name="btnAdd" Content="Add" Width="120" Click="BtnAdd_Click" Height="30"/>
                                <ComboBox Width="128"/>
                                <Button x:Name="btnClear" Content="Clear Filter" Width="120"/>
                            </WrapPanel>
                            <DataGrid x:Name="usersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="80,50,381,214" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding firstName}" Header="First Name" Width="120"/>
                                    <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding lastName}" Header="Last Name" Width="120"/>
                                    <DataGridTextColumn x:Name="titleColumn" Binding="{Binding title}" Header="Title" Width="120"/>
                                    <DataGridTemplateColumn x:Name="modifyUserColumn" Header="" Width="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnModifyUser" Content="Modify" Tag="{Binding userID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnModifyUser_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="deleteUserColumn" Header="" Width="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteUser" Content="Delete" Tag="{Binding userID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteUser_Click"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Offices" Style="{DynamicResource TabItemStyle1}" HorizontalAlignment="Left" Width="89" Margin="1,0,-1,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource officeListViewSource}" Width="971">
                            <Grid x:Name="grid1" DataContext="{StaticResource officeListViewSource}" HorizontalAlignment="Left" Margin="48,67,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Office Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="officeNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding officeName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Grid x:Name="grid2" DataContext="{StaticResource officeListViewSource}" HorizontalAlignment="Left" Margin="52,104,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Office Floor:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="officeFloorTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding officeFloor, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddOffice" Content="Add Office" HorizontalAlignment="Left" Margin="141,141,0,0" VerticalAlignment="Top" Width="120" Click="BtnAddOffice_Click" Height="30"/>
                            <DataGrid x:Name="officeListDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="0,21,400,235" RowDetailsVisibilityMode="VisibleWhenSelected" HorizontalAlignment="Right" Width="290">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteOfficeColumn" Header="" Width="70">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteOffice" Content="Delete" Tag="{Binding officeID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteOffice_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="officeNameColumn" Binding="{Binding officeName}" Header="Office Name" Width="110"/>
                                    <DataGridTextColumn x:Name="officeFloorColumn" Binding="{Binding officeFloor}" Header="Office Floor" Width="90"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Statuses" Style="{DynamicResource TabItemStyle1}" HorizontalAlignment="Left" Width="89" Margin="2,0,-2,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource statusListViewSource}">
                            <DataGrid x:Name="statusListDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="263,26,530,214" RowDetailsVisibilityMode="VisibleWhenSelected">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteStatusColumn" Header="" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteStatus" Content="Delete" Tag="{Binding StatusID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteStatus_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="statusColumn2" Binding="{Binding Status}" Header="Status" Width="80"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Grid x:Name="grid3" HorizontalAlignment="Left" Margin="58,109,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Status:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="statusTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Status, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddStatus" Content="Add Status" HorizontalAlignment="Left" Margin="116,157,0,0" VerticalAlignment="Top" Width="120" Click="BtnAddStatus_Click" Height="30"/>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Locations" Style="{DynamicResource TabItemStyle1}" HorizontalAlignment="Left" Width="88" Margin="3,0,-3,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource locationsViewSource}" Width="960">
                            <Grid x:Name="grid4" HorizontalAlignment="Left" Margin="62,100,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Location:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="locationTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding Location, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Grid x:Name="grid5" HorizontalAlignment="Left" Margin="81,137,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="State:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="stateTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding State, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddLocation" Content="Add Location" HorizontalAlignment="Left" Margin="133,174,0,0" VerticalAlignment="Top" Width="120" Click="BtnAddLocation_Click" Height="30"/>
                            <DataGrid x:Name="locationsDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="277,26,349,21" RowDetailsVisibilityMode="VisibleWhenSelected">

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteLocationColumn" Header="" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteLocation" Content="Delete" Tag="{Binding LocationID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteLocation_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTextColumn x:Name="locationColumn3" Binding="{Binding Location}" Header="Location" Width="120"/>
                                    <DataGridTextColumn x:Name="stateColumn1" Binding="{Binding State}" Header="State" Width="120"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Categories" Style="{DynamicResource TabItemStyle1}" HorizontalAlignment="Left" Width="93" Margin="4,0,-4,0">
                        <Grid Background="#FFE5E5E5" DataContext="{StaticResource categoriesViewSource}" Width="955">
                            <DataGrid x:Name="categoriesDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="0,56,387,298" RowDetailsVisibilityMode="VisibleWhenSelected" HorizontalAlignment="Right" Width="232">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn x:Name="deleteCategoryColumn" Header="" Width="80">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="btnDeleteCategory" Content="Delete" Tag="{Binding CategoryID}" BorderThickness="0" Margin="0" Padding="1" Grid.IsSharedSizeScope="False" Width="Auto" Click="BtnDeleteCategory_CLick"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn x:Name="categoryNameColumn1" Binding="{Binding CategoryName}" Header="Category Name" Width="120"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Grid x:Name="grid6" HorizontalAlignment="Left" Margin="64,94,0,0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label Content="Category Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                                <TextBox x:Name="categoryNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CategoryName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                            </Grid>
                            <Button x:Name="BtnAddCategory" Content="Add Category" HorizontalAlignment="Left" Margin="138,144,0,0" VerticalAlignment="Top" Width="120" Click="BtnAddCategory_Click" Height="30"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
